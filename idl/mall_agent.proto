syntax = "proto3";

package mall_agent;

option go_package = "/mall_agent";

// MallAgentService 定义智能客服代理服务接口
service MallAgentService {
  // 处理用户查询
  rpc ProcessQuery(QueryRequest) returns (QueryResponse) {}
  
  // 流式处理用户查询
  rpc ProcessQueryStream(QueryRequest) returns (stream QueryResponseChunk) {}
  
  // 获取会话历史
  rpc GetSessionHistory(HistoryRequest) returns (HistoryResponse) {}
  
  // 健康检查
  rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse) {}
}

// 用户查询请求
message QueryRequest {
  string session_id = 1;        // 会话ID
  string query = 2;             // 用户查询内容
  uint64 user_id = 3;           // 用户ID
  map<string, string> context = 4;  // 上下文信息
}

// 查询响应
message QueryResponse {
  string message = 1;           // 回复消息
  bool success = 2;             // 是否成功
  repeated Action actions = 3;  // 执行的动作列表
}

// 流式响应片段
message QueryResponseChunk {
  string content = 1;           // 内容片段
  bool is_final = 2;            // 是否为最后一个片段
  string action_type = 3;       // 动作类型(如果有)
}

// 动作信息
message Action {
  string action_type = 1;       // 动作类型
  string target_id = 2;         // 目标ID
  string result = 3;            // 结果
}

// 历史记录请求
message HistoryRequest {
  string session_id = 1;        // 会话ID
  uint64 user_id = 2;           // 用户ID
  int32 limit = 3;              // 限制返回的消息数量
}

// 历史记录响应
message HistoryResponse {
  repeated Message messages = 1;  // 消息列表
}

// 消息
message Message {
  string role = 1;              // 角色(user/assistant)
  string content = 2;           // 内容
  int64 timestamp = 3;          // 时间戳
}

// 健康检查请求
message HealthCheckRequest {
  bool check_dependencies = 1;  // 是否检查依赖服务
}

// 健康检查响应
message HealthCheckResponse {
  bool status = 1;              // 健康状态
  string message = 2;           // 状态消息
  map<string, ServiceStatus> dependencies = 3;  // 依赖服务状态
}

// 服务状态
message ServiceStatus {
  bool available = 1;           // 是否可用
  string message = 2;           // 状态消息
}